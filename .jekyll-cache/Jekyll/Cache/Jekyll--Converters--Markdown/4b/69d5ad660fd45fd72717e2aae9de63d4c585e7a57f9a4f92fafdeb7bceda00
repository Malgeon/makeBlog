I"W<h3 id="run">run()</h3>
<p>run() 함수는 두 가지 형태이다.
<code class="language-plaintext highlighter-rouge">public inline fun &lt;R&gt; run(block: () -&gt; R):R = return block()</code>
``public inline fun &lt;T, R&gt; T.run(block: T.() -&gt; R):R = return block()`</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="kd">var</span> <span class="nx">skills</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Kotlin</span><span class="dl">"</span>
<span class="nx">println</span><span class="p">(</span><span class="nx">skills</span><span class="p">)</span> <span class="c1">// Kotlin</span>

<span class="nx">val</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">10</span>
<span class="nx">skills</span> <span class="o">=</span> <span class="nx">run</span> <span class="p">{</span>
    <span class="nx">val</span> <span class="nx">level</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Kotlin Level:</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">a</span>
    <span class="nx">level</span> <span class="c1">//마지막 표현식이 반환됨</span>
<span class="p">}</span>
<span class="nx">println</span><span class="p">(</span><span class="nx">skills</span><span class="p">)</span> <span class="c1">// Kotlin Level: 10</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>apply 와 run 비교</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="rouge-code"><pre><span class="nx">fun</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">data</span> <span class="kd">class</span> <span class="nx">Person</span><span class="p">(</span><span class="kd">var</span> <span class="nx">name</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span> <span class="kd">var</span> <span class="nx">skills</span><span class="p">:</span> <span class="nb">String</span><span class="p">)</span>
    <span class="kd">var</span> <span class="nx">person</span> <span class="o">=</span> <span class="nx">Person</span><span class="p">(</span><span class="dl">"</span><span class="s2">Kildong</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Kotlin</span><span class="dl">"</span><span class="p">)</span>

    <span class="nx">val</span> <span class="nx">returnObj</span> <span class="o">=</span> <span class="nx">person</span><span class="p">.</span><span class="nx">apply</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Sean</span><span class="dl">"</span>
        <span class="nx">skills</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">java</span><span class="dl">"</span>
        <span class="dl">"</span><span class="s2">success</span><span class="dl">"</span> <span class="c1">//사용되지 않는다.</span>
    <span class="p">}</span>
    <span class="nx">println</span><span class="p">(</span><span class="nx">person</span><span class="p">)</span>
    <span class="nx">println</span><span class="p">(</span><span class="dl">"</span><span class="s2">returnObj: $returnObj</span><span class="dl">"</span><span class="p">)</span> <span class="c1">// person</span>

    <span class="nx">val</span> <span class="nx">returnObj2</span> <span class="o">=</span> <span class="nx">person</span><span class="p">.</span><span class="nx">run</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">,</span><span class="nx">name</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Dooly</span><span class="dl">"</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">skills</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">C#</span><span class="dl">"</span>
        <span class="dl">"</span><span class="s2">success</span><span class="dl">"</span>
    <span class="p">}</span>
    
    <span class="nx">println</span><span class="p">(</span><span class="nx">person</span><span class="p">)</span>
    <span class="nx">println</span><span class="p">(</span><span class="dl">"</span><span class="s2">returnObj2: $returnObj2</span><span class="dl">"</span><span class="p">)</span> <span class="c1">// success</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="with">with()</h3>
<p>run()함수와 기능이 거의 동일한데, with()에서는 receiver로 전달할 객체를 처리한다.</p>

<p><code class="language-plaintext highlighter-rouge">public inline fun &lt;T, R&gt; with(receiver: T, block: T.() -&gt; R): R = receiver.block()</code></p>

<p>with는 세이프 콜(?.)을 지원하지 않기 떄문에 let과 같이 사용된다.</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="nx">supportActionBar</span><span class="p">?.</span><span class="kd">let</span> <span class="p">{</span>
    <span class="kd">with</span><span class="p">(</span><span class="nx">it</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">setDisplayHomeAsUpEnabled</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
        <span class="nx">setHomeAsUpIndicator</span><span class="p">(</span><span class="nx">R</span><span class="p">.</span><span class="nx">drawable</span><span class="p">.</span><span class="nx">ic_clear_white</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>아래와 동일하다.</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="nx">supportActionBar</span><span class="p">?.</span><span class="nx">run</span> <span class="p">{</span>
    <span class="nx">setDisplayHomeAsUpEnabled</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
    <span class="nx">setHomeAsUpIndicator</span><span class="p">(</span><span class="nx">R</span><span class="p">.</span><span class="nx">drawable</span><span class="p">.</span><span class="nx">ic_clear_white</span><span class="p">)</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="nx">fun</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">data</span> <span class="kd">class</span> <span class="nx">User</span><span class="p">(</span><span class="kd">var</span> <span class="nx">name</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span> <span class="kd">var</span> <span class="nx">skills</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span> <span class="kd">var</span> <span class="nx">email</span><span class="p">:</span> <span class="nb">String</span><span class="p">?</span> <span class="o">=</span> <span class="kc">null</span><span class="p">)</span>

    <span class="kd">var</span> <span class="nx">user</span> <span class="o">=</span> <span class="nx">User</span><span class="p">(</span><span class="dl">"</span><span class="s2">Kildong</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">default</span><span class="dl">"</span><span class="p">)</span>

    <span class="nx">val</span> <span class="nx">result</span> <span class="o">=</span> <span class="kd">with</span> <span class="p">(</span><span class="nx">user</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">skills</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Kotlin</span><span class="dl">"</span>
        <span class="nx">email</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">kildong@example.com</span><span class="dl">"</span>
    <span class="p">}</span>
    <span class="nx">println</span><span class="p">(</span><span class="nx">user</span><span class="p">)</span> <span class="c1">// User</span>
    <span class="nx">println</span><span class="p">(</span><span class="dl">"</span><span class="s2">result: $result</span><span class="dl">"</span><span class="p">)</span>  <span class="c1">// result: kotlin.Unit (Unit을 반환한다.)</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="use">use()</h3>
<p>use()를 사용하면 객체를 사용한 후 close() 등을 자동적으로 호출해 닫아준다.</p>

<p><code class="language-plaintext highlighter-rouge">public inline fun &lt;T : Closeable?, R&gt; T.use(block: (T) -&gt; R) : R</code> 또는
<code class="language-plaintext highlighter-rouge">public inline fun &lt;T : AutoCloseable?, R&gt; T.use(block: (T) -&gt; R) : R</code></p>

<ul>
  <li>T의 제한된 자료형을 보면 Closeable?로 block은 닫힐 수 있는 객체를 지정해야 함</li>
  <li>Java 7 이후는 AutoCloseable?로 사용됨</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="c1">//기존 자바 코드</span>
<span class="kd">private</span> <span class="nc">String</span> <span class="nf">readFirstLine</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">FileNotFoundException</span> <span class="o">{</span>
    <span class="nc">BufferedReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">FileReader</span><span class="o">(</span><span class="s">"test.file"</span><span class="o">));</span>
    <span class="k">try</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">reader</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="n">reader</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="kr">private</span> <span class="nx">fun</span> <span class="nx">readFirstLine</span><span class="p">():</span> <span class="nb">String</span> <span class="p">{</span>
    <span class="nx">BufferedReader</span><span class="p">(</span><span class="nx">FileReader</span><span class="p">(</span><span class="dl">"</span><span class="s2">test.file</span><span class="dl">"</span><span class="p">)).</span><span class="nx">use</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">it</span><span class="p">.</span><span class="nx">readLine</span><span class="p">()</span> <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>파일 닫기에 대한 처리</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="nx">fun</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">PrintWriter</span><span class="p">(</span><span class="nx">FileOutputStream</span><span class="p">(</span><span class="dl">"</span><span class="s2">.....</span><span class="se">\</span><span class="s2">output.txt</span><span class="dl">"</span><span class="p">)).</span><span class="nx">use</span> <span class="p">{</span>
        <span class="nx">it</span><span class="p">.</span><span class="nx">println</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="takeif--takeunless">takeIf() &amp; takeUnless()</h3>
<ul>
  <li>takeIf(): 람다식이 true이면 객체 T를 반환하고 그렇지 않으면 null 반환</li>
  <li>take Unless(): 람다식이 false이면 객체 T를 반환하고 그렇지 않으면 null 반환</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">public inline fun &lt;T&gt; T.takeIf(predicate: (T) -&gt; Boolean): T? = if (predicate(this)) this else null</code></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="c1">// 기존 코드</span>
<span class="k">if</span> <span class="p">(</span><span class="nx">someObject</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="nx">someObject</span><span class="p">.</span><span class="nx">status</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">doThis</span><span class="p">()</span>
<span class="p">}</span>
<span class="c1">// safe call 사용</span>
<span class="k">if</span> <span class="p">(</span><span class="nx">someObject</span><span class="p">?.</span><span class="nx">status</span> <span class="o">==</span> <span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">doThis</span><span class="p">()</span>
<span class="p">}</span>
<span class="c1">// takeIf 사용</span>
<span class="nx">someObject</span><span class="p">?.</span><span class="nx">takeIf</span> <span class="p">{</span> <span class="nx">it</span><span class="p">.</span><span class="nx">status</span> <span class="p">}?.</span><span class="nx">apply</span> <span class="p">{</span> <span class="nx">doThis</span><span class="p">()</span> <span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>elvis 연산자와 함께 사용 예제</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="nx">val</span> <span class="nx">input</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">kotlin</span><span class="dl">"</span>
<span class="nx">val</span> <span class="nx">keyword</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">in</span><span class="dl">"</span>

<span class="c1">// 입력 문자열에 키워드가 있으면 인덱스를 반환하는 함수를 takeIf를 사용하여 구현</span>
<span class="nx">input</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">keyword</span><span class="p">).</span><span class="nx">takeIf</span> <span class="p">{</span> <span class="nx">it</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="p">}</span> <span class="p">?:</span> <span class="nx">error</span><span class="p">(</span><span class="dl">"</span><span class="s2">keyword not found</span><span class="dl">"</span><span class="p">)</span>
<span class="c1">// takeUnless 사용</span>
<span class="nx">input</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">keyword</span><span class="p">).</span><span class="nx">takeUnless</span> <span class="p">{</span> <span class="nx">it</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="p">}</span> <span class="p">?:</span> <span class="nx">error</span><span class="p">(</span><span class="dl">"</span><span class="s2">keyword not found</span><span class="dl">"</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="시간-측정-하기">시간 측정 하기</h3>
<ul>
  <li>measureTimeMillis() &amp; measureNanoTime()</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="kr">public</span> <span class="nx">inline</span> <span class="nx">fun</span> <span class="nx">measureTimeMillis</span><span class="p">(</span><span class="nx">block</span><span class="p">:</span> <span class="p">()</span> <span class="o">-&gt;</span> <span class="nx">Unit</span><span class="p">):</span> <span class="nx">Long</span> <span class="p">{</span>
    <span class="nx">val</span> <span class="nx">start</span> <span class="o">=</span> <span class="nx">System</span><span class="p">.</span><span class="nx">currentTimeMillis</span><span class="p">()</span>
    <span class="nx">block</span><span class="p">()</span>
    <span class="k">return</span> <span class="nx">System</span><span class="p">.</span><span class="nx">currentTimeMillis</span><span class="p">()</span> <span class="o">-</span> <span class="nx">start</span>
<span class="p">}</span>

<span class="kr">public</span> <span class="nx">inline</span> <span class="nx">fun</span> <span class="nx">measureNanoTime</span><span class="p">(</span><span class="nx">block</span><span class="p">:</span> <span class="p">()</span> <span class="o">-&gt;</span> <span class="nx">Unit</span><span class="p">):</span> <span class="nx">Long</span> <span class="p">{</span>
    <span class="nx">val</span> <span class="nx">start</span> <span class="o">=</span> <span class="nx">System</span><span class="p">.</span><span class="nx">nanoTime</span><span class="p">()</span>
    <span class="nx">block</span><span class="p">()</span>
    <span class="k">return</span> <span class="nx">System</span><span class="p">.</span><span class="nx">nanoTime</span><span class="p">()</span> <span class="o">-</span> <span class="nx">start</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>사용 예</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="nx">val</span> <span class="nx">executionTime</span> <span class="o">=</span> <span class="nx">measureTimeMillis</span> <span class="p">{</span>
    <span class="c1">// 측정할 작업 코드</span>
<span class="p">}</span>
<span class="nx">printnl</span><span class="p">(</span><span class="dl">"</span><span class="s2">Execution Time = $executionTime ms</span><span class="dl">"</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="난수-생성">난수 생성</h3>
<p>자바의 java.util.Random을 이용할 수도 있지만, JVM에만 특화된 난수를 생성한다. 때문에 코틀린에서는 멀티플랫폼에서도 사용 가능한 kotlin.random.Random을 제공한다.</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">import</span> <span class="nx">kotlin</span><span class="p">.</span><span class="nx">random</span><span class="p">.</span><span class="nx">Random</span>
<span class="p">...</span>
<span class="nx">val</span> <span class="nx">number</span> <span class="o">=</span> <span class="nx">Random</span><span class="p">.</span><span class="nx">nextInt</span><span class="p">(</span><span class="mi">21</span><span class="p">)</span> <span class="c1">// 숫자는 난수 발생 범위</span>
<span class="nx">println</span><span class="p">(</span><span class="nx">number</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET