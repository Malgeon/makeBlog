I"f<h3 id="gradle">Gradle</h3>

<p><a href="https://developer.android.com/studio/build?hl=ko">Android Studio에서 제공하는 Gradle</a></p>

<p>Gradle은 android studio에서 기본적으로 제공하는 빌드 배포 도구이다.
위의 링크를 통해 자세히 알수 있다.</p>

<p>여기서 하고 싶은 것은 프로젝트에 필요한 라이브러리를 모듈이 추가되더라도 한꺼번에 관리할 수 있고자 한다. 
이때, 기본값으로 설정된 build.gradle(project level)에서 관리하기 보다 추가로 project level의 versions.gradle을 만들어 관리하는 편이 용이하다.</p>

<p><br /><br /></p>

<h3 id="versionsgradle에-한번에-관리하기">versions.gradle에 한번에 관리하기.</h3>
<p><br /></p>

<p>우선 rootProject에서 versions.gradle 생성한다.</p>

<p>file을 #.gradle로 만들면 자동으로 gradle build script가 된다.(이름이 versions가 아니어도 된다.)</p>

<p>이곳에 build.gradle(proejct level)의 repositories와 dependencies 그리고 build.gradle(module level)의 android version 및 dependencies를 관리하려 한다.</p>

<p>이를 위해선 알아야 할 groovy문법은 다음과 같다.</p>
<ul>
  <li>로컬 변수 : ‘def 변수명’ 으로 선언. 해당 변수는 로컬에서만 접근이 가능하다.</li>
  <li>ext 변수 : 프로젝트 전체와 서브 프로젝트에서도 접근이 가능하다.</li>
  <li>{} 사용 : 객체를 할당하고자 할 경우 사용한다.</li>
</ul>

<p>proejct level에서 versions.gradle을 만들어 로컬 변수에서 각각의 라이브러리 version과 dependency를 관리하여 해당 로컬 변수를 ext에 할당하여 프로젝트 전체와 서브 프로젝트에서도 접근이 가능하도록 해준다.</p>

<p>방법은 아래와 같다.</p>

<ol>
  <li>build.gradle(proejct level)의 buildscript에 versions.gradle을 사용할수 있도록 한다.</li>
</ol>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="n">buildscript</span> <span class="o">{</span>
    <span class="n">apply</span> <span class="nl">from:</span> <span class="err">'</span><span class="n">versions</span><span class="o">.</span><span class="na">gradle</span><span class="err">'</span>
    <span class="o">...</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<ol>
  <li>dependencies를 관리해주기 위해 empty map을 선언해준다.</li>
</ol>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">ext</span><span class="o">.</span><span class="na">deps</span> <span class="o">=</span> <span class="o">[:]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<ol>
  <li>version과 build_version을 empty map 로컬 변수로 선언을 하고 각각의 version을 할당해준 뒤, 다시 ext.version과 ext.build_version에 할당해 준다.
이때 version과 같이 많은 라이브러리를 다룰 경우 알파벳 순으로 정렬을 해두는 것이 좋다. (deps에서도 동일하다.)</li>
</ol>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="n">def</span> <span class="n">versions</span> <span class="o">=</span> <span class="o">[:]</span>
<span class="n">versions</span><span class="o">.</span><span class="na">kotlin</span> <span class="o">=</span> <span class="s">"1.3.72"</span>
<span class="n">ext</span><span class="o">.</span><span class="na">versions</span> <span class="o">=</span> <span class="n">versions</span>

<span class="n">def</span> <span class="n">kotlin</span> <span class="o">=</span> <span class="o">[:]</span>
<span class="n">kotlin</span><span class="o">.</span><span class="na">stdlib</span> <span class="o">=</span> <span class="s">"org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"</span>
<span class="n">kotlin</span><span class="o">.</span><span class="na">plugin</span> <span class="o">=</span> <span class="s">"org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"</span>
<span class="n">deps</span><span class="o">.</span><span class="na">kotlin</span> <span class="o">=</span> <span class="n">kotlin</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<ol>
  <li>이제 versions.gradle에 있는 값을 각 dependencies에 적용을 해준다.</li>
</ol>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="c1">// module level build.gradle</span>
<span class="n">dependencies</span> <span class="o">{</span>
    <span class="n">implementation</span> <span class="n">deps</span><span class="o">.</span><span class="na">kotlin</span><span class="o">.</span><span class="na">stdlib</span>
<span class="o">}</span>

<span class="c1">// project level build.gradle</span>
<span class="n">dependencies</span> <span class="o">{</span>
    <span class="n">classpath</span> <span class="n">deps</span><span class="o">.</span><span class="na">kotlin</span><span class="o">.</span><span class="na">plugin</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET