I"
<h1 id="spec">SPEC</h1>

<h3 id="api">API</h3>

<p>주어진 API 상세 :</p>

<h3 id="앱-아키텍처">앱 아키텍처</h3>

<p>아래와 같이 안드로이드 개발자 페이지에서 추천하는 아키텍쳐로 구성하였다.</p>

<p><img src="/assets/images/project/android/final-architecture.png" alt="final-architecture" /></p>

<h3 id="디자인-아키텍쳐--mvvm">디자인 아키텍쳐 : MVVM</h3>

<h3 id="di---koin">DI - Koin</h3>

<p>다음 프로젝트에서는 Dagger-Hilt를 사용할 예정이다.</p>

<h3 id="network---rxjava-retrofit">NetWork - rxJava, retrofit</h3>

<p><img src="/assets/images/project/android/android.jpg" alt="android!" /></p>

<h1 id="현재-작업중">현재 작업중</h1>

<h3 id="mvvm-디자인-패턴에-맞게-다시-구축">MVVM 디자인 패턴에 맞게 다시 구축</h3>
<p>MVVM이 아니었다…!!!</p>

<p>MVVM의 ViewModel 기능에 맞도록 databinding과 viewbinding을 적용하자.</p>

<h3 id="livedata-활용도">LiveData 활용도</h3>
<p>(MVVM의 dataBinding과 연결되어) 단순히 API의 response값만 받는 형태가 아닌, 프래그먼트 primary Key 처리 등
활용도를 높이자.</p>

<p>MediatorLiveData의 메커니즘을 이해하여 사용하자.</p>

<h3 id="livecycle에-대한-이해">Livecycle에 대한 이해</h3>
<p>특정 시점에서 fragment lifecycle이 destroy되지 않는 현상에 대한 대안으로 viewLifecycleOwner를 사용하며, background에서 observing을 필요로 하는 작업에 대하여 observeForever을 사용하는 등 여러 작업을 통해 lifecycle을 이해하며 사용하도록 하자.</p>

<h3 id="ui">UI</h3>
<ul>
  <li>Statusbar와 Toolbar가 스크롤에 따라 투명도가 같이 변하는 함수 작업(이미지를 화면 전체로 채우기 위함)</li>
</ul>

<h1 id="리팩토링-관련-자료">리팩토링 관련 자료</h1>

<h3 id="linearlayout---constraintlayout">LinearLayout -&gt; ConstraintLayout</h3>

<p><a href="https://academy.realm.io/kr/posts/constraintlayout-it-can-do-what-now/">ConstraintLatout</a>에 관한 글.</p>

<h3 id="listadapter">ListAdapter</h3>

<p><a href="https://zion830.tistory.com/86">ListAdapter</a>에 관한 글.</p>

<h3 id="lifecycle">Lifecycle</h3>

<p><a href="http://pluu.github.io/blog/android/2020/01/25/android-fragment-lifecycle/">Lifecycle</a>에 관한 글.
<a href="https://uchun.dev/caution-when-using-a-fragment-viewLifecycleOwner/">ViewLifecycleOwner</a>에 관한 글.</p>

<h3 id="livedata">LiveData</h3>

<p><a href="https://hckim999.tistory.com/26">LiveData</a>에 관한 글.</p>

:ET