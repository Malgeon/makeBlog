I"%<h3 id="순열과-조합">순열과 조합</h3>

<p>순열과 조합은 여러 군데에서 쓰인다.
쓰이는 방법도 다양한데</p>
<ul>
  <li>각각의 배열의 값으로써</li>
  <li>조합된 원소의 값들로써</li>
</ul>

<p>하지만 설계하는 것이 즉석에서 곧바로 할 수 있는 일이 아니기 때문에, 미리 이해하는 차원에서 만들어 놓고자 한다.</p>

<h3 id="결과값-구하기">결과값 구하기</h3>

<p>nCr -&gt; nPr에서 중복 원소를 제외한 개수
nPr =&gt; n개의 경우를 r 번 사용할 경우</p>

<ul>
  <li>nCr</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="n">fun</span> <span class="nf">combination</span><span class="o">(</span><span class="nl">n:</span> <span class="nc">Int</span><span class="o">,</span> <span class="nl">r:</span> <span class="nc">Int</span><span class="o">):</span> <span class="nc">Int</span> <span class="o">{</span>
    <span class="kt">var</span> <span class="n">top</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="kt">var</span> <span class="n">bottom</span> <span class="o">=</span> <span class="mi">1</span>

    <span class="k">for</span><span class="o">(</span><span class="n">i</span> <span class="n">in</span> <span class="mi">0</span> <span class="n">until</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">top</span> <span class="o">*=</span> <span class="n">n</span><span class="o">-</span><span class="n">i</span>
        <span class="n">bottom</span> <span class="o">*=</span> <span class="n">r</span><span class="o">-</span><span class="n">i</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">top</span><span class="o">/</span><span class="n">bottom</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<ul>
  <li>nPr</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="n">fun</span> <span class="nf">permutaion</span><span class="o">(</span><span class="nl">n:</span> <span class="nc">Int</span><span class="o">,</span> <span class="nl">r:</span> <span class="nc">Int</span><span class="o">):</span> <span class="nc">Int</span> <span class="o">{</span>
    <span class="kt">var</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">1</span>
    
    <span class="k">for</span><span class="o">(</span><span class="n">i</span> <span class="n">in</span> <span class="mi">0</span> <span class="n">until</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">value</span> <span class="o">*=</span> <span class="n">n</span><span class="o">-</span><span class="n">i</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">top</span><span class="o">/</span><span class="n">bottom</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="조합된-원소-구하기">조합된 원소 구하기</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
</pre></td><td class="rouge-code"><pre><span class="n">fun</span> <span class="nf">getCombination</span><span class="o">(</span><span class="nl">arrString:</span> <span class="nc">String</span><span class="o">,</span> <span class="nl">num:</span> <span class="nc">Int</span><span class="o">):</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="o">{</span>
    <span class="n">val</span> <span class="n">arr</span> <span class="o">=</span> <span class="nc">Array</span><span class="o">(</span><span class="n">arrString</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="o">{</span> <span class="n">it</span> <span class="o">}</span>
    <span class="kt">var</span> <span class="n">visited</span> <span class="o">=</span> <span class="nc">Array</span><span class="o">(</span><span class="n">arrString</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="o">{</span> <span class="kc">false</span> <span class="o">}</span>
    <span class="kt">var</span> <span class="n">set</span> <span class="o">=</span> <span class="n">arrayListOf</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;()</span>

    <span class="n">fun</span> <span class="nf">addArr</span><span class="o">(</span><span class="nl">picked:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">Int</span><span class="o">&gt;,</span> <span class="nl">visited:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">Boolean</span><span class="o">&gt;,</span> <span class="nl">size:</span> <span class="nc">Int</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">var</span> <span class="n">makeCourse</span> <span class="o">=</span> <span class="s">""</span>
        <span class="k">for</span><span class="o">(</span><span class="n">i</span> <span class="n">in</span> <span class="mi">0</span> <span class="n">until</span> <span class="n">size</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">visited</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="o">{</span>
                <span class="n">makeCourse</span> <span class="o">+=</span> <span class="n">arrString</span><span class="o">[</span><span class="n">picked</span><span class="o">[</span><span class="n">i</span><span class="o">]]</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">makeCourse</span><span class="o">)</span>
    <span class="o">}</span>

    <span class="n">fun</span> <span class="nf">find</span><span class="o">(</span><span class="nl">picked:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">Int</span><span class="o">&gt;,</span> <span class="nl">visited:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">Boolean</span><span class="o">&gt;,</span> <span class="nl">start:</span> <span class="nc">Int</span><span class="o">,</span> <span class="nl">size:</span><span class="nc">Int</span><span class="o">,</span> <span class="nl">num:</span> <span class="nc">Int</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">addArr</span><span class="o">(</span><span class="n">picked</span><span class="o">,</span> <span class="n">visited</span><span class="o">,</span> <span class="n">size</span><span class="o">)</span>
            <span class="k">return</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="n">i</span> <span class="n">in</span> <span class="n">start</span> <span class="n">until</span> <span class="n">picked</span><span class="o">.</span><span class="na">size</span><span class="o">){</span>
                <span class="n">visited</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="kc">true</span>
                <span class="nf">find</span><span class="o">(</span><span class="n">picked</span><span class="o">,</span> <span class="n">visited</span><span class="o">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">size</span><span class="o">,</span> <span class="n">num</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span>
                <span class="n">visited</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="kc">false</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="n">find</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="n">visited</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">arrString</span><span class="o">.</span><span class="na">length</span><span class="o">,</span> <span class="n">num</span><span class="o">)</span>
    <span class="k">return</span> <span class="n">set</span><span class="o">.</span><span class="na">toTypedArray</span><span class="o">()</span>
<span class="o">}</span>

</pre></td></tr></tbody></table></code></pre></div></div>

:ET