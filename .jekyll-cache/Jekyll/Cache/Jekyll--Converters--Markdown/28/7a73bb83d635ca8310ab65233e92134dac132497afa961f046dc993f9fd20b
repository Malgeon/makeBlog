I"*"<div class="card h-100 my-u-padding"><div class="insertcover"><a target="_blank" class="text-dark" href="https://programmers.co.kr/learn/courses/30/lessons/12949"><div class=""><img class="inserturl" src="/assets/images/study/programmers.png" alt="programmers.co.kr" /></div><div class="insert-img-body"><h4 class="insert-img-title">연습문제 : 행렬의 곱셈</h4><p class="insert-img-description">programmers.co.kr</p></div></a></div></div>

<p>여러가지 방법 중 3 가지를 작성하고자 한다.</p>

<ol>
  <li>Array 선언부의 람다식을 이용한 방법</li>
  <li>빈 Array를 선언하여, also와 fold를 이용한 방법</li>
  <li>map을 이용하여 매개 arr의 index를 이용한 방법</li>
</ol>

<p><br /></p>

<h4 id="1번-방법">1번 방법</h4>
<p>Array 선언부의 (Int)는 index를 가지고 있으므로 해당 index를 이용해 계산 후 value를 return 하는 방법이다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="n">fun</span> <span class="nf">solution</span><span class="o">(</span><span class="nl">arr1:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">IntArray</span><span class="o">&gt;,</span> <span class="nl">arr2:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">IntArray</span><span class="o">&gt;)</span> <span class="o">=</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">IntArray</span><span class="o">&gt;(</span><span class="n">arr1</span><span class="o">.</span><span class="na">size</span><span class="o">)</span> <span class="o">{</span> <span class="n">i</span> <span class="o">-&gt;</span> 
        <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">Int</span><span class="o">&gt;(</span><span class="n">arr2</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">size</span><span class="o">)</span> <span class="o">{</span> <span class="n">j</span> <span class="o">-&gt;</span>
                <span class="kt">var</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">0</span>
                <span class="k">for</span><span class="o">(</span><span class="n">n</span> <span class="n">in</span> <span class="mi">0</span> <span class="n">until</span> <span class="n">arr1</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">size</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">value</span> <span class="o">+=</span> <span class="o">(</span><span class="n">arr1</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">n</span><span class="o">]</span> <span class="o">*</span> <span class="n">arr2</span><span class="o">[</span><span class="n">n</span><span class="o">][</span><span class="n">j</span><span class="o">])</span>
                <span class="o">}</span>
                <span class="n">value</span>
        <span class="o">}.</span><span class="na">toIntArray</span><span class="o">()</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>2번 방법 <br />
빈 배열을 선언하고 해당 빈 배열에서 also를 이용하여 배열에 값을 집어 넣은 후 배열 return</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="n">fun</span> <span class="nf">solution</span><span class="o">(</span><span class="nl">arr1:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">IntArray</span><span class="o">&gt;,</span> <span class="nl">arr2:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">IntArray</span><span class="o">&gt;)</span> <span class="o">=</span> <span class="nc">Array</span><span class="o">(</span><span class="n">arr1</span><span class="o">.</span><span class="na">size</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">IntArray</span><span class="o">(</span><span class="n">arr2</span><span class="o">.</span><span class="na">first</span><span class="o">().</span><span class="na">size</span><span class="o">)</span> <span class="o">}.</span><span class="na">also</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="n">n</span> <span class="n">in</span> <span class="n">arr1</span><span class="o">.</span><span class="na">indices</span><span class="o">)</span>
                <span class="k">for</span> <span class="o">(</span><span class="n">m</span> <span class="n">in</span> <span class="n">arr2</span><span class="o">.</span><span class="na">first</span><span class="o">().</span><span class="na">indices</span><span class="o">)</span>
                    <span class="n">it</span><span class="o">[</span><span class="n">n</span><span class="o">][</span><span class="n">m</span><span class="o">]</span> <span class="o">=</span> <span class="n">arr2</span><span class="o">.</span><span class="na">indices</span><span class="o">.</span><span class="na">fold</span><span class="o">(</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span> <span class="n">acc</span><span class="o">,</span> <span class="n">i</span> <span class="o">-&gt;</span> <span class="n">acc</span> <span class="o">+</span> <span class="n">arr1</span><span class="o">[</span><span class="n">n</span><span class="o">][</span><span class="n">i</span><span class="o">]</span> <span class="o">*</span> <span class="n">arr2</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">m</span><span class="o">]</span> <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>3번 방법 <br />
빈 배열을 생성하기 보다 어차피 return 배열의 크기는 mapIndexed와 fodIndexed에서 이용할 수 있으므로 fold를 이용하여 값을 계산후 return 해준다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="n">fun</span> <span class="nf">solution</span><span class="o">(</span><span class="nl">arr1:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">IntArray</span><span class="o">&gt;,</span> <span class="nl">arr2:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">IntArray</span><span class="o">&gt;)</span> <span class="o">=</span> <span class="n">arr1</span><span class="o">.</span><span class="na">map</span> <span class="o">{</span> <span class="n">row</span> <span class="o">-&gt;</span>
            <span class="n">arr2</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">mapIndexed</span> <span class="o">{</span> <span class="n">index</span><span class="o">,</span> <span class="n">a</span> <span class="o">-&gt;</span>
                <span class="n">row</span><span class="o">.</span><span class="na">foldIndexed</span><span class="o">(</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span> <span class="n">idx</span><span class="o">,</span> <span class="n">acc</span> <span class="o">,</span> <span class="n">i</span> <span class="o">-&gt;</span>
                    <span class="n">acc</span> <span class="o">+</span> <span class="n">i</span> <span class="o">*</span> <span class="n">arr2</span><span class="o">[</span><span class="n">idx</span><span class="o">][</span><span class="n">index</span><span class="o">]</span>
                <span class="o">}</span>
            <span class="o">}.</span><span class="na">toIntArray</span><span class="o">()</span>
    <span class="o">}.</span><span class="na">toTypedArray</span><span class="o">()</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET