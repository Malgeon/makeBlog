I"0D<h3 id="연산자-오버로딩operator-overloading">연산자 오버로딩(operator overloading)</h3>
<ul>
  <li>연산자에 여러 가지 다른 의미의 작동을 부여</li>
  <li>코틀린에서는 특정 연산자의 역할을 함수로 정의</li>
  <li>operator 키워드를 사용해 정의</li>
</ul>

<h3 id="수식-연산자">수식 연산자</h3>
<p>a + b 연산자 관련 메서드</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nx">val</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">5</span>
<span class="nx">val</span> <span class="nx">b</span> <span class="o">=</span> <span class="mi">10</span>
<span class="nx">print</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">plus</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span> <span class="c1">// print( a + b ) 와 동일</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>오버로딩된 plus() 함수의 종류</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="c1">// 표준 라이브러리의 Primitives.kt 파일의 일부</span>
<span class="p">...</span>
<span class="c1">/// + operator for basic types</span>
<span class="nx">operator</span> <span class="nx">fun</span> <span class="nx">plus</span><span class="p">(</span><span class="nx">other</span><span class="p">:</span> <span class="nx">Byte</span><span class="p">):</span> <span class="nx">Int</span>
<span class="nx">operator</span> <span class="nx">fun</span> <span class="nx">plus</span><span class="p">(</span><span class="nx">other</span><span class="p">:</span> <span class="nx">Short</span><span class="p">):</span> <span class="nx">Int</span>
<span class="nx">operator</span> <span class="nx">fun</span> <span class="nx">plus</span><span class="p">(</span><span class="nx">other</span><span class="p">:</span> <span class="nx">Int</span><span class="p">):</span> <span class="nx">Int</span>
<span class="nx">operator</span> <span class="nx">fun</span> <span class="nx">plus</span><span class="p">(</span><span class="nx">other</span><span class="p">:</span> <span class="nx">Long</span><span class="p">):</span> <span class="nx">Long</span>
<span class="nx">operator</span> <span class="nx">fun</span> <span class="nx">plus</span><span class="p">(</span><span class="nx">other</span><span class="p">:</span> <span class="nx">Float</span><span class="p">):</span> <span class="nx">Float</span>
<span class="nx">operator</span> <span class="nx">fun</span> <span class="nx">plus</span><span class="p">(</span><span class="nx">other</span><span class="p">:</span> <span class="nx">Double</span><span class="p">):</span> <span class="nx">Double</span>

<span class="c1">// for string concatenation</span>
<span class="nx">operator</span> <span class="nx">fun</span> <span class="nb">String</span><span class="p">?.</span><span class="nx">plus</span><span class="p">(</span><span class="nx">other</span><span class="p">:</span> <span class="nx">Any</span><span class="p">?):</span> <span class="nb">String</span>
<span class="p">...</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>오버로딩 예시</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nx">Point</span><span class="p">(</span><span class="nx">val</span> <span class="nx">x</span><span class="p">:</span> <span class="nx">Int</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kd">var</span> <span class="nx">y</span><span class="p">:</span> <span class="nx">Int</span> <span class="o">=</span> <span class="mi">10</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// plus 함수의 연산자 오버로딩</span>
    <span class="nx">operator</span> <span class="nx">fun</span> <span class="nx">plus</span><span class="p">(</span><span class="nx">p</span><span class="p">:</span> <span class="nx">Point</span><span class="p">)</span> <span class="p">:</span> <span class="nx">Point</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">Point</span><span class="p">(</span><span class="nx">x</span> <span class="o">+</span> <span class="nx">p</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span> <span class="o">+</span> <span class="nx">p</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nx">fun</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">val</span> <span class="nx">p1</span> <span class="o">=</span> <span class="nx">Point</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="o">-</span><span class="mi">8</span><span class="p">)</span>
    <span class="nx">val</span> <span class="nx">p2</span> <span class="o">=</span> <span class="nx">Point</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">9</span><span class="p">)</span>

    <span class="kd">var</span> <span class="nx">point</span> <span class="o">=</span> <span class="nx">Point</span><span class="p">()</span>
    <span class="nx">point</span> <span class="o">=</span> <span class="nx">p1</span> <span class="o">+</span> <span class="nx">p2</span> <span class="c1">// Point 객체의 +(operator plus!) 연산이 가능하게 됨</span>
    <span class="nx">println</span><span class="p">(</span><span class="dl">"</span><span class="s2">point = (${point.x}, ${point.y})</span><span class="dl">"</span><span class="p">)</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="c1">// --연산의 오버로딩 추가</span>
<span class="kd">class</span> <span class="nx">Point</span><span class="p">(</span><span class="kd">var</span> <span class="nx">x</span><span class="p">:</span> <span class="nx">Int</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kd">var</span> <span class="nx">y</span><span class="p">:</span> <span class="nx">Int</span> <span class="o">=</span> <span class="mi">10</span><span class="p">)</span> <span class="p">{</span>
    <span class="p">...</span>
    <span class="nx">operator</span> <span class="nx">fun</span> <span class="nx">dec</span><span class="p">()</span> <span class="o">=</span> <span class="nx">Point</span><span class="p">(</span><span class="o">--</span><span class="nx">x</span><span class="p">,</span> <span class="o">--</span><span class="nx">y</span><span class="p">)</span>
<span class="p">}</span>

<span class="nx">fun</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="p">...</span>
    <span class="o">--</span><span class="nx">point</span> <span class="c1">// --연산자</span>
    <span class="nx">println</span><span class="p">(</span><span class="dl">"</span><span class="s2">point = (${point.x}, ${point.y})</span><span class="dl">"</span><span class="p">)</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>수식 연산자의 종류</p>

<table>
  <thead>
    <tr>
      <th>표현식</th>
      <th>함수 의미</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>a + b</td>
      <td>a.plus(b)</td>
    </tr>
    <tr>
      <td>a - b</td>
      <td>a.minus(b)</td>
    </tr>
    <tr>
      <td>a * b</td>
      <td>a.times(b)</td>
    </tr>
    <tr>
      <td>a / b</td>
      <td>a.div(b)</td>
    </tr>
    <tr>
      <td>a % b</td>
      <td>a.rem(b) (Kotlin 1.1부터, a.mod(b) (지원 중단)</td>
    </tr>
    <tr>
      <td>a .. b</td>
      <td>a.rangeTo(b)</td>
    </tr>
  </tbody>
</table>

<h3 id="호출-연산자invoke-operator">호출 연산자(invoke operator)</h3>
<p>함수 호출을 돕는데 사용한다.</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nx">Manager</span> <span class="p">{</span>
    <span class="nx">operator</span> <span class="nx">fun</span> <span class="nx">invoke</span><span class="p">(</span><span class="nx">value</span><span class="p">:</span> <span class="nb">String</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">println</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nx">fun</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">val</span> <span class="nx">manager</span> <span class="o">=</span> <span class="nx">Manager</span><span class="p">()</span>
    <span class="nx">manager</span><span class="p">(</span><span class="dl">"</span><span class="s2">Do something for me!</span><span class="dl">"</span><span class="p">)</span> <span class="c1">// manager.invoke("...") 형태로 호출되며 invoke가 생략 되었다. </span>
                                    <span class="c1">// (invoke를 사용할때 해당 객체만 사용하면 생략 가능하다)</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nx">val</span> <span class="nx">sum</span> <span class="o">=</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="nx">Int</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="nx">Int</span> <span class="o">-&gt;</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">y</span><span class="p">}</span>
<span class="nx">sum</span><span class="p">.</span><span class="nx">invoke</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span> <span class="c1">// 13</span>
<span class="nx">sum</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span> <span class="c1">// 위와 동일한 결과</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="인덱스-연산자indexed-access-operator">인덱스 연산자(indexed access operator)</h3>
<p>게터/세터를 다루기 위한 대괄호([]) 연산자를 제공</p>

<table>
  <thead>
    <tr>
      <th>표현식</th>
      <th>함수 의미</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>a[i]</td>
      <td>a.get(i)</td>
    </tr>
    <tr>
      <td>a[i, j]</td>
      <td>a.get(i,j)</td>
    </tr>
    <tr>
      <td>a[i_1, …, i_n]</td>
      <td>a.get(i+1, …, i_n)</td>
    </tr>
    <tr>
      <td>a[i] = b</td>
      <td>a.set(i, b)</td>
    </tr>
    <tr>
      <td>a[i, j] = b</td>
      <td>a.set(i, j, b)</td>
    </tr>
    <tr>
      <td>a[i_1, …, i_n] = b</td>
      <td>a.set(i_1, …, i_n, b)</td>
    </tr>
  </tbody>
</table>

<h3 id="단일-연산자">단일 연산자</h3>
<p>먼저 a의 자료형을 결정하고 매개변수 없이 각 연산자에 대한 함수를 호출한 다음 연산된 결과를 반환</p>

<table>
  <thead>
    <tr>
      <th>표현식</th>
      <th>함수 의미</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>+a</td>
      <td>a.unaryPlus()</td>
    </tr>
    <tr>
      <td>-a</td>
      <td>a.unaryMinus()</td>
    </tr>
    <tr>
      <td>!a</td>
      <td>a.not()</td>
    </tr>
  </tbody>
</table>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="nx">data</span> <span class="kd">class</span> <span class="nx">Point</span><span class="p">(</span><span class="nx">val</span> <span class="nx">x</span><span class="p">:</span> <span class="nx">Int</span><span class="p">,</span> <span class="nx">val</span> <span class="nx">y</span><span class="p">:</span> <span class="nx">Int</span><span class="p">)</span>

<span class="nx">operator</span> <span class="nx">fun</span> <span class="nx">Point</span><span class="p">.</span><span class="nx">unaryMinus</span><span class="p">()</span> <span class="o">=</span> <span class="nx">Point</span><span class="p">(</span><span class="o">-</span><span class="nx">x</span><span class="p">,</span> <span class="o">-</span><span class="nx">y</span><span class="p">)</span>

<span class="nx">val</span> <span class="nx">point</span> <span class="o">=</span> <span class="nx">Point</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">)</span>
<span class="nx">println</span><span class="p">(</span><span class="o">-</span><span class="nx">point</span><span class="p">)</span> <span class="c1">// 단일 연산자에 의해 (-10, -20) 값을 바꿈</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="포함-범위-연산자">포함 범위 연산자</h3>

<p>in 연산자는 반복문에 사용해 특정 객체의 반복에 사용 혹은 포함여부 판단</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">if</span> <span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="mi">1</span><span class="p">..</span><span class="mi">10</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 1 &lt;= &amp;&amp; i &lt;= 10 와 동일</span>
    <span class="nx">println</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
<span class="p">}</span>
<span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="mi">1</span><span class="p">..</span><span class="mi">4</span><span class="p">)</span> <span class="nx">print</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span> <span class="c1">// "1234" 출력</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<table>
  <thead>
    <tr>
      <th>표현식</th>
      <th>함수 의미</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>a in b</td>
      <td>b.contains(a)</td>
    </tr>
    <tr>
      <td>a !in b</td>
      <td>!b.contains(a)</td>
    </tr>
  </tbody>
</table>

<h3 id="할당-연산자augmented-assignment">할당 연산자(augmented assignment)</h3>
<p>예를 들어 a += b는 a + b의 연산 결과를 다시 a에 할당</p>

<table>
  <thead>
    <tr>
      <th>표현식</th>
      <th>함수 의미</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>a += b</td>
      <td>a.plusAssign(b)</td>
    </tr>
    <tr>
      <td>a -= b</td>
      <td>a.minusAssign(b)</td>
    </tr>
    <tr>
      <td>a *= b</td>
      <td>a.timesAssign(b)</td>
    </tr>
    <tr>
      <td>a /= b</td>
      <td>a.divAssign(b)</td>
    </tr>
    <tr>
      <td>a %= b</td>
      <td>a.remAssign(b), a.modAssign(b)(지원중단)</td>
    </tr>
  </tbody>
</table>

<h3 id="동등성-연산자equality-and-inequality">동등성 연산자(equality and inequality)</h3>

<table>
  <thead>
    <tr>
      <th>표현식</th>
      <th>함수 의미</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>a == b</td>
      <td>a?.eqauls(b) ?: (b === null)</td>
    </tr>
    <tr>
      <td>a != b</td>
      <td>!(a?.eqauls(b) ?: (b === null))</td>
    </tr>
  </tbody>
</table>

<h3 id="비교-연산자comparison">비교 연산자(comparison)</h3>

<table>
  <thead>
    <tr>
      <th>표현식</th>
      <th>함수 의미</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>a &gt; b</td>
      <td>a.compareTo(b) &gt; 0</td>
    </tr>
    <tr>
      <td>a &lt; b</td>
      <td>a.compareTo(b) &lt; 0</td>
    </tr>
    <tr>
      <td>a &gt;= b</td>
      <td>a.compareTo(b) &gt;= 0</td>
    </tr>
    <tr>
      <td>a &lt;= b</td>
      <td>a.compareTo(b) &lt;= 0</td>
    </tr>
  </tbody>
</table>
:ET