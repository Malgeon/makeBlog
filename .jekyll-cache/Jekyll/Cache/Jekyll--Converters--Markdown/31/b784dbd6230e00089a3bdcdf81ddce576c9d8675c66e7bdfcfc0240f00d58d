I"u?<div class="card h-100 my-u-padding"><div class="insertcover"><a target="_blank" class="text-dark" href="https://programmers.co.kr/learn/courses/30/lessons/72411"><div class=""><img class="inserturl" src="/assets/images/study/programmers.png" alt="programmers.co.kr" /></div><div class="insert-img-body"><h4 class="insert-img-title">2021 KAKAO BLIND RECRUITMENT : 메뉴 리뉴얼</h4><p class="insert-img-description">programmers.co.kr</p></div></a></div></div>

<p>주어진 Array를 원하는 course값에 맞게 combination하여 중복 값을 찾는다.
중복 값의 max가 2이상인 Str을 담아 return 해주면 된다.</p>

<p>정답률 25%</p>

<p>간단한 문제라고 생각한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="n">fun</span> <span class="nf">solution</span><span class="o">(</span><span class="nl">orders:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;,</span> <span class="nl">course:</span> <span class="nc">IntArray</span><span class="o">):</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="o">{</span>
        <span class="kt">var</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">arrayListOf</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;()</span>

        <span class="n">course</span><span class="o">.</span><span class="na">forEach</span> <span class="o">{</span> <span class="n">courseNum</span> <span class="o">-&gt;</span>
            <span class="kt">var</span> <span class="n">target</span> <span class="o">=</span> <span class="n">makeCousreList</span><span class="o">(</span><span class="n">orders</span><span class="o">,</span> <span class="n">courseNum</span><span class="o">)</span>
            <span class="n">println</span><span class="o">(</span><span class="n">target</span><span class="o">.</span><span class="na">toString</span><span class="o">())</span>
            <span class="kt">var</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="n">target</span><span class="o">.</span><span class="na">forEach</span><span class="o">{</span>
                <span class="n">max</span> <span class="o">=</span> <span class="n">max</span><span class="o">.</span><span class="na">coerceAtLeast</span><span class="o">(</span><span class="n">it</span><span class="o">.</span><span class="na">second</span><span class="o">)</span>
            <span class="o">}</span>
            <span class="kt">var</span> <span class="n">test</span> <span class="o">=</span> <span class="n">target</span>
            <span class="nf">if</span><span class="o">(</span><span class="n">max</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">)</span>  <span class="o">{</span>
                <span class="n">target</span><span class="o">.</span><span class="na">filter</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">second</span> <span class="o">==</span> <span class="n">max</span><span class="o">}.</span><span class="na">forEach</span> <span class="o">{</span> <span class="n">pairItem</span> <span class="o">-&gt;</span>
                    <span class="n">answer</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pairItem</span><span class="o">.</span><span class="na">first</span><span class="o">)</span>
                <span class="o">}</span>
            <span class="o">}</span>

        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">.</span><span class="na">sorted</span><span class="o">().</span><span class="na">toTypedArray</span><span class="o">()</span>
    <span class="o">}</span>

    <span class="n">fun</span> <span class="nf">getCourse</span><span class="o">(</span><span class="nl">arr:</span> <span class="nc">String</span><span class="o">,</span> <span class="nl">num:</span> <span class="nc">Int</span><span class="o">):</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="o">{</span>
        <span class="n">val</span> <span class="n">courseIdx</span> <span class="o">=</span> <span class="nc">Array</span><span class="o">(</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="o">{</span> <span class="n">it</span> <span class="o">}</span>
        <span class="kt">var</span> <span class="n">visited</span> <span class="o">=</span> <span class="nc">Array</span><span class="o">(</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="o">{</span> <span class="kc">false</span> <span class="o">}</span>
        <span class="kt">var</span> <span class="n">courseSet</span> <span class="o">=</span> <span class="n">arrayListOf</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;()</span>

        <span class="n">fun</span> <span class="nf">addCourse</span><span class="o">(</span><span class="nl">picked:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">Int</span><span class="o">&gt;,</span> <span class="nl">visited:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">Boolean</span><span class="o">&gt;,</span> <span class="nl">size:</span> <span class="nc">Int</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">var</span> <span class="n">makeCourse</span> <span class="o">=</span> <span class="s">""</span>
            <span class="k">for</span><span class="o">(</span><span class="n">i</span> <span class="n">in</span> <span class="mi">0</span> <span class="n">until</span> <span class="n">size</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">visited</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="o">{</span>
                    <span class="n">makeCourse</span> <span class="o">+=</span> <span class="n">arr</span><span class="o">[</span><span class="n">picked</span><span class="o">[</span><span class="n">i</span><span class="o">]]</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="n">courseSet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">makeCourse</span><span class="o">)</span>
        <span class="o">}</span>

        <span class="n">fun</span> <span class="nf">find</span><span class="o">(</span><span class="nl">picked:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">Int</span><span class="o">&gt;,</span> <span class="nl">visited:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">Boolean</span><span class="o">&gt;,</span> <span class="nl">start:</span> <span class="nc">Int</span><span class="o">,</span> <span class="nl">size:</span><span class="nc">Int</span><span class="o">,</span> <span class="nl">num:</span> <span class="nc">Int</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">addCourse</span><span class="o">(</span><span class="n">picked</span><span class="o">,</span> <span class="n">visited</span><span class="o">,</span> <span class="n">size</span><span class="o">)</span>
                <span class="k">return</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="k">for</span><span class="o">(</span><span class="n">i</span> <span class="n">in</span> <span class="n">start</span> <span class="n">until</span> <span class="n">picked</span><span class="o">.</span><span class="na">size</span><span class="o">){</span>
                    <span class="n">visited</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="kc">true</span>
                    <span class="nf">find</span><span class="o">(</span><span class="n">picked</span><span class="o">,</span> <span class="n">visited</span><span class="o">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">size</span><span class="o">,</span> <span class="n">num</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span>
                    <span class="n">visited</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="kc">false</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">find</span><span class="o">(</span><span class="n">courseIdx</span><span class="o">,</span> <span class="n">visited</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">,</span> <span class="n">num</span><span class="o">)</span>
        <span class="k">return</span> <span class="n">courseSet</span><span class="o">.</span><span class="na">toTypedArray</span><span class="o">()</span>
    <span class="o">}</span>

    <span class="n">fun</span> <span class="nf">makeCousreList</span><span class="o">(</span><span class="nl">orders:</span> <span class="nc">Array</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;,</span> <span class="nl">courseNum:</span> <span class="nc">Int</span><span class="o">):</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Pair</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Int</span><span class="o">&gt;&gt;</span>  <span class="o">{</span>
        <span class="kt">var</span> <span class="n">courseSet</span> <span class="o">=</span> <span class="n">mutableSetOf</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;()</span>
        <span class="kt">var</span> <span class="n">coursePair</span> <span class="o">=</span> <span class="n">mutableListOf</span><span class="o">&lt;</span><span class="nc">Pair</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Int</span><span class="o">&gt;&gt;()</span>

        <span class="n">val</span> <span class="n">sortedOrders</span> <span class="o">=</span> <span class="n">orders</span><span class="o">.</span><span class="na">map</span><span class="o">{</span>
            <span class="nc">String</span><span class="o">(</span><span class="n">it</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">().</span><span class="na">sortedArray</span><span class="o">())</span>
        <span class="o">}</span>

        <span class="n">sortedOrders</span><span class="o">.</span><span class="na">forEach</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">it</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span> <span class="n">courseNum</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">courseSet</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">it</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">coursePair</span><span class="o">[</span><span class="n">courseSet</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="n">it</span><span class="o">)]</span> <span class="o">=</span> <span class="nc">Pair</span><span class="o">(</span><span class="n">it</span><span class="o">,</span> <span class="n">coursePair</span><span class="o">[</span><span class="n">courseSet</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="n">it</span><span class="o">)].</span><span class="na">second</span><span class="o">+</span><span class="mi">1</span> <span class="o">)</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="n">courseSet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">it</span><span class="o">)</span>
                    <span class="n">coursePair</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">Pair</span><span class="o">(</span><span class="n">it</span><span class="o">,</span> <span class="mi">1</span><span class="o">))</span>
                <span class="o">}</span>
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">it</span><span class="o">.</span><span class="na">length</span> <span class="o">&gt;</span> <span class="n">courseNum</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">getCourse</span><span class="o">(</span><span class="n">it</span><span class="o">,</span> <span class="n">courseNum</span><span class="o">).</span><span class="na">forEach</span> <span class="o">{</span> <span class="n">separateCusrse</span> <span class="o">-&gt;</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">courseSet</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">separateCusrse</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">coursePair</span><span class="o">[</span><span class="n">courseSet</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="n">separateCusrse</span><span class="o">)]</span> <span class="o">=</span> <span class="nc">Pair</span><span class="o">(</span><span class="n">separateCusrse</span><span class="o">,</span> <span class="n">coursePair</span><span class="o">[</span><span class="n">courseSet</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="n">separateCusrse</span><span class="o">)].</span><span class="na">second</span><span class="o">+</span><span class="mi">1</span> <span class="o">)</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="n">courseSet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">separateCusrse</span><span class="o">)</span>
                        <span class="n">coursePair</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">Pair</span><span class="o">(</span><span class="n">separateCusrse</span><span class="o">,</span> <span class="mi">1</span><span class="o">))</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">coursePair</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET