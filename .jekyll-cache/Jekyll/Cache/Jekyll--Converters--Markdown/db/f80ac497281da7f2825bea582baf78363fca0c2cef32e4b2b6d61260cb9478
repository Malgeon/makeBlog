I"?<h3 id="제네릭generic">제네릭(generic)</h3>
<p>자료형의 객체들을 다루는 메서드나 클래스에서 컴파일 시간에 자료형을 검사해 적당한 자료형을 선택할 수 있도록 하기 위해 만들어진 개념</p>

<p>제네릭의 일반적인 사용</p>
<ul>
  <li>앵글 브래킷(&lt;&gt;) 사이에 형식 매개변수를 사용해 선언한다</li>
  <li>형식 매개변수는 자료형을 대표하는 용어로 T와 같이(Type의 약자) 특정 영문의 대문자로 사용한다</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nx">Box</span><span class="o">&lt;</span><span class="nx">T</span><span class="o">&gt;</span><span class="p">(</span><span class="nx">a</span><span class="p">:</span> <span class="nx">T</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">name</span> <span class="o">=</span> <span class="nx">a</span>
<span class="p">}</span>

<span class="nx">fun</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">val</span> <span class="nx">box1</span> <span class="o">=</span> <span class="nx">Box</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="nx">val</span> <span class="nx">box1</span><span class="p">:</span> <span class="nx">Box</span><span class="o">&lt;</span><span class="nx">Int</span><span class="o">&gt;</span> <span class="o">=</span> <span class="nx">Box</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="c1">// 추론이 가능하기 때문에 생략 가능하다</span>
    <span class="nx">val</span> <span class="nx">box2</span> <span class="o">=</span> <span class="nx">Box</span><span class="p">(</span><span class="dl">"</span><span class="s2">kildong</span><span class="dl">"</span><span class="p">)</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nx">Box</span><span class="o">&lt;</span><span class="nx">T</span><span class="o">&gt;</span><span class="p">(</span><span class="nx">t</span><span class="p">:</span> <span class="nx">T</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 제네릭을 사용해 형식 매개변수를 받아 name에 저장</span>
    <span class="kd">var</span> <span class="nx">name</span> <span class="o">=</span> <span class="nx">t</span>
<span class="p">}</span>
<span class="nx">fun</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">val</span> <span class="nx">box1</span><span class="p">:</span> <span class="nx">Box</span><span class="o">&lt;</span><span class="nx">Int</span><span class="o">&gt;</span> <span class="o">=</span> <span class="nx">Box</span><span class="o">&lt;</span><span class="nx">Int</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="nx">val</span> <span class="nx">box2</span><span class="p">:</span> <span class="nx">Box</span><span class="o">&lt;</span><span class="nb">String</span><span class="o">&gt;</span> <span class="o">=</span> <span class="nx">Box</span><span class="o">&lt;</span><span class="nb">String</span><span class="o">&gt;</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hello</span><span class="dl">"</span><span class="p">)</span>

    <span class="nx">println</span><span class="p">(</span><span class="nx">box1</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span> <span class="c1">// 1</span>
    <span class="nx">println</span><span class="p">(</span><span class="nx">box2</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span> <span class="c1">// Hello</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="형식-매개변수의-이름">형식 매개변수의 이름</h3>
<p>강제사항은 없으나 일종의 규칙처럼 사용된다</p>

<table>
  <thead>
    <tr>
      <th>형식 매개변수 이름</th>
      <th>의미</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>E</td>
      <td>요쇼(element)</td>
    </tr>
    <tr>
      <td>K</td>
      <td>키(key)</td>
    </tr>
    <tr>
      <td>N</td>
      <td>숫자(number)</td>
    </tr>
    <tr>
      <td>T</td>
      <td>형식(type)</td>
    </tr>
    <tr>
      <td>V</td>
      <td>값(value)</td>
    </tr>
    <tr>
      <td>S, U, V etc.</td>
      <td>두 번째, 세 번째, 네 번째 형식(2nd, 3rd, 4th types)</td>
    </tr>
  </tbody>
</table>

<p>자료형이 추론 가능한 경우는 앵글 브라켓 표현을 생략해도 된다.</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nx">val</span> <span class="nx">box3</span> <span class="o">=</span> <span class="nx">Box</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="c1">// 1은 Int형이므로 Box&lt;Int&gt;로 유추한다.</span>
<span class="nx">val</span> <span class="nx">box4</span> <span class="o">=</span> <span class="nx">Box</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hello</span><span class="dl">"</span><span class="p">)</span> <span class="c1">// "Hello"은 String형이므로 Box&lt;String&gt;로 유추한다.</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>형식 매개변수를 한개 이상 받는 클래스</p>
<ul>
  <li>인스턴스를 생성하는 시점에서 클래스의 자료형을 정하게 된다.</li>
  <li>제네릭 클래스 내에 메서드에도 다음과 같이 형식 매개변수를 사용</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nx">MyClass</span><span class="o">&lt;</span><span class="nx">T</span><span class="o">&gt;</span> <span class="p">{</span> <span class="c1">// 한 개의 형식 매개변수를 가지는 클래스</span>
    <span class="nx">fun</span> <span class="nx">myMethod</span><span class="p">(</span><span class="na">a</span><span class="p">:</span> <span class="nx">T</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 메서드의 매개변수 자료형에 사용됨</span>
        <span class="p">...</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<ul>
  <li>프로퍼티에 지정하는 경우
    <ul>
      <li>주 생성자나 부 생성자에 형식 매개변수를 지정해 사용</li>
    </ul>
  </li>
</ul>

<p>주 생성자의 형식 매개변수</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nx">MyClass</span><span class="o">&lt;</span><span class="nx">T</span><span class="o">&gt;</span><span class="p">(</span><span class="nx">val</span> <span class="nx">myProp</span><span class="p">:</span> <span class="nx">T</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span> <span class="c1">// 주 생성자의 프로퍼티</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>부 생성자의 형식 매개변수</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nx">MyClass</span><span class="o">&lt;</span><span class="nx">T</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="nx">val</span> <span class="na">myProp</span><span class="p">:</span> <span class="nx">T</span> <span class="c1">// 프로퍼티</span>
    <span class="kd">constructor</span><span class="p">(</span><span class="na">myProp</span><span class="p">:</span> <span class="nx">T</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 부 생성자 이용</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">myProp</span> <span class="o">=</span> <span class="nx">myProp</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>정수형이 사용된 객체 초기화 예시</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="kd">var</span> <span class="o">=</span> <span class="nx">MyClass</span><span class="o">&lt;</span><span class="nx">Int</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span> <span class="c1">// 주 생성자 myProp에는 12가 할당되며 정수형으로 결정됨</span>
<span class="nx">println</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">myProp</span><span class="p">)</span> <span class="c1">// 12</span>
<span class="nx">println</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">javaClass</span><span class="p">)</span> <span class="c1">// MyClass</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="rouge-code"><pre><span class="nx">open</span> <span class="kd">class</span> <span class="nx">Parent</span>

<span class="kd">class</span> <span class="nx">Child</span> <span class="p">:</span> <span class="nx">Parent</span><span class="p">()</span>
<span class="kd">class</span> <span class="nx">Cup</span><span class="o">&lt;</span><span class="nx">T</span><span class="o">&gt;</span>

<span class="nx">fun</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">val</span> <span class="nx">obj1</span><span class="p">:</span> <span class="nx">Parent</span> <span class="o">=</span> <span class="nx">Parent</span><span class="p">()</span>
    <span class="c1">// val obj2: Child = Parent() // 에러!</span>
    <span class="nx">val</span> <span class="nx">obj3</span><span class="p">:</span> <span class="nx">Child</span> <span class="o">=</span> <span class="nx">Child</span><span class="p">()</span>
    <span class="nx">val</span> <span class="nx">obj4</span><span class="p">:</span> <span class="nx">Parent</span> <span class="o">=</span> <span class="nx">Child</span><span class="p">()</span> <span class="c1">// 된다!</span>

    <span class="nx">val</span> <span class="nx">obj5</span> <span class="o">=</span> <span class="nx">Cup</span><span class="o">&lt;</span><span class="nx">Parent</span><span class="o">&gt;</span><span class="p">()</span>
    <span class="c1">// val obj5: Cup&lt;Parent&gt; = Cup&lt;Parent&gt;() 동일하다.</span>
    <span class="c1">// val obj6: Cup&lt;Child&gt; = Cup&lt;Parent&gt;() // 에러!</span>
    <span class="nx">val</span> <span class="nx">obj7</span> <span class="o">=</span> <span class="nx">Cup</span><span class="o">&lt;</span><span class="nx">Child</span><span class="o">&gt;</span><span class="p">()</span>
    <span class="c1">// val obj8: Cup&lt;Parent&gt; = Cup&lt;Child&gt;() // 에러! -</span>

    <span class="nx">val</span> <span class="nx">obj8</span><span class="p">:</span> <span class="nx">Cup</span><span class="o">&lt;</span><span class="nx">Child</span><span class="o">&gt;</span> <span class="o">=</span> <span class="nx">obj7</span> <span class="c1">// 형식이 일치하므로 가능!</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>여기서 in 과 out을 이용하면 가변성을 줄수 있다. (나중에 정리)</p>

<h3 id="형식-매개변수의-null-제어">형식 매개변수의 null 제어</h3>
<p>제네릭의 형식 매개변수는 기본적으로 null 가능한 형태로 선언된다.</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nx">GenericNull</span><span class="o">&lt;</span><span class="nx">T</span><span class="o">&gt;</span> <span class="p">{</span> <span class="c1">// 기본적으로 null이 허용되는 형식 매개변수</span>
    <span class="nx">fun</span> <span class="nx">EqualityFunc</span><span class="p">(</span><span class="na">arg1</span><span class="p">:</span> <span class="nx">T</span><span class="p">,</span> <span class="na">arg2</span><span class="p">:</span> <span class="nx">T</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">println</span><span class="p">(</span><span class="nx">arg1</span><span class="p">?.</span><span class="nx">equals</span><span class="p">(</span><span class="nx">arg2</span><span class="p">))</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nx">fun</span> <span class="nx">main</span><span class="p">(</span><span class="nx">args</span><span class="p">:</span> <span class="nb">Array</span><span class="o">&lt;</span><span class="nb">String</span><span class="o">&gt;</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">val</span> <span class="nx">obj</span> <span class="o">=</span> <span class="nx">GenericNull</span><span class="o">&lt;</span><span class="nb">String</span><span class="o">&gt;</span><span class="p">()</span> <span class="c1">// non-null로 선언됨</span>
    <span class="nx">obj</span><span class="p">.</span><span class="nx">EqualityFUnc</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hello</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">World</span><span class="dl">"</span><span class="p">)</span> <span class="c1">// null이 허용되지 않음</span>

    <span class="nx">val</span> <span class="nx">obj2</span> <span class="o">=</span> <span class="nx">GenericNull</span><span class="o">&lt;</span><span class="nx">Int</span><span class="p">?</span><span class="o">&gt;</span><span class="p">()</span> <span class="c1">// null이 가능한 형식으로 선언됨</span>
    <span class="nx">obj2</span><span class="p">.</span><span class="nx">EqualityFunc</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span> <span class="c1">// null 사용</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>null을 허용하지 않으려면 특정 자료형으로 제한하면 된다.
 -&gt; <code class="language-plaintext highlighter-rouge">&lt;T: Any&gt;</code></p>
:ET