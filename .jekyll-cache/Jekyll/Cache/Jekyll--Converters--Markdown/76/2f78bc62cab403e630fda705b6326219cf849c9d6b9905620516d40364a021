I"HR<p>category: 2019 카카오 개발자 겨울 인턴십</p>

<h1 id="문제-설명">문제 설명</h1>

<p>개발팀 내에서 이벤트 개발을 담당하고 있는 무지는 최근 진행된 카카오이모티콘 이벤트에 비정상적인 방법으로 당첨을 시도한 응모자들을 발견하였습니다. 이런 응모자들을 따로 모아 불량 사용자라는 이름으로 목록을 만들어서 당첨 처리 시 제외하도록 이벤트 당첨자 담당자인 프로도 에게 전달하려고 합니다. 이 때 개인정보 보호을 위해 사용자 아이디 중 일부 문자를 ‘<em>’ 문자로 가려서 전달했습니다. 가리고자 하는 문자 하나에 ‘</em>’ 문자 하나를 사용하였고 아이디 당 최소 하나 이상의 ‘*’ 문자를 사용하였습니다.
무지와 프로도는 불량 사용자 목록에 매핑된 응모자 아이디를 제재 아이디 라고 부르기로 하였습니다.</p>

<p>예를 들어, 이벤트에 응모한 전체 사용자 아이디 목록이 다음과 같다면</p>

<p>응모자 아이디
frodo
fradi
crodo
abc123
frodoc</p>

<p>다음과 같이 불량 사용자 아이디 목록이 전달된 경우,</p>

<p>불량 사용자
fr<em>d</em>
abc1**</p>

<p>불량 사용자에 매핑되어 당첨에서 제외되어야 야 할 제재 아이디 목록은 다음과 같이 두 가지 경우가 있을 수 있습니다.</p>

<p>제재 아이디
frodo
abc123</p>

<p>제재 아이디
fradi
abc123</p>

<p>이벤트 응모자 아이디 목록이 담긴 배열 user_id와 불량 사용자 아이디 목록이 담긴 배열 banned_id가 매개변수로 주어질 때, 당첨에서 제외되어야 할 제재 아이디 목록은 몇가지 경우의 수가 가능한 지 return 하도록 solution 함수를 완성해주세요.</p>

<ul>
  <li>제한사항
    <ul>
      <li>user_id 배열의 크기는 1 이상 8 이하입니다.</li>
      <li>user_id 배열 각 원소들의 값은 길이가 1 이상 8 이하인 문자열입니다.</li>
      <li>응모한 사용자 아이디들은 서로 중복되지 않습니다.</li>
      <li>응모한 사용자 아이디는 알파벳 소문자와 숫자로만으로 구성되어 있습니다.</li>
      <li>banned_id 배열의 크기는 1 이상 user_id 배열의 크기 이하입니다.</li>
      <li>banned_id 배열 각 원소들의 값은 길이가 1 이상 8 이하인 문자열입니다.</li>
      <li>불량 사용자 아이디는 알파벳 소문자와 숫자, 가리기 위한 문자 ‘*’ 로만 이루어져 있습니다.</li>
      <li>불량 사용자 아이디는 ‘*’ 문자를 하나 이상 포함하고 있습니다.</li>
      <li>불량 사용자 아이디 하나는 응모자 아이디 중 하나에 해당하고 같은 응모자 아이디가 중복해서 제재 아이디 목록에 들어가는 경우는 없습니다.</li>
      <li>제재 아이디 목록들을 구했을 때 아이디들이 나열된 순서와 관계없이 아이디 목록의 내용이 동일하다면 같은 것으로 처리하여 하나로 세면 됩니다.</li>
    </ul>
  </li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="kd">var</span> <span class="nx">user_id</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">frodo</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">fradi</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">crodo</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">abc123</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">frodoc</span><span class="dl">"</span><span class="p">];</span>

<span class="c1">//var banned_id = ["fr*d*", "abc1**"]; // result : 2</span>
<span class="kd">var</span> <span class="nx">banned_id</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">*rodo</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">*rodo</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">******</span><span class="dl">"</span><span class="p">];</span> <span class="c1">// result : 2</span>
<span class="c1">//var banned_id = ["fr*d*", "*rodo", "******", "******"]; //result : 3</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="문제풀이">문제풀이</h1>
<p>종속적인 두 배열간 조합문제이다.</p>

<p>우선 ban id에 존재하거나, 사용하지 않았다면 picked 배열에 집어넣어 다음 find를 구성하도록 하고
  다시 빼낸다음에 나머지 for문을 돌게 하는 방식</p>

<p>banned_id로 인해 종속적인 배열들이 생성될수 있는데, 
  하나의 배열로 조합을 구성하면서 banned_id 조건을 추가해 주는 방식으로 해결했다.</p>

<p>또한 문자열 배열이지만 간단한 계산을 위해 문자의 index를 값으로 하는 배열로 구성해야 한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
</pre></td><td class="rouge-code"><pre><span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">user_id</span><span class="p">,</span> <span class="nx">banned_id</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kd">const</span> <span class="nx">picked</span> <span class="o">=</span> <span class="p">[];</span>
    <span class="kd">let</span> <span class="nx">len</span> <span class="o">=</span> <span class="nx">banned_id</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
    <span class="kd">const</span> <span class="nx">banSets</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Set</span><span class="p">();</span>
    <span class="kd">const</span> <span class="nx">usedFlag</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">user_id</span><span class="p">.</span><span class="nx">length</span><span class="p">).</span><span class="nx">fill</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>

    <span class="kd">function</span> <span class="nx">find</span><span class="p">(</span><span class="nx">picked</span><span class="p">,</span> <span class="nx">banId</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">picked</span><span class="p">.</span><span class="nx">length</span> <span class="o">===</span> <span class="nx">len</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">const</span> <span class="nx">usedId</span> <span class="o">=</span> <span class="p">[];</span>
            <span class="nx">picked</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span> <span class="nx">item</span> <span class="o">=&gt;</span> <span class="p">{</span>
                <span class="nx">usedId</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
            <span class="p">})</span>
            <span class="nx">banSets</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">usedId</span><span class="p">.</span><span class="nx">sort</span><span class="p">().</span><span class="nx">join</span><span class="p">(</span><span class="dl">''</span><span class="p">));</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">user_id</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">usedFlag</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="nx">banCompare</span><span class="p">(</span><span class="nx">user_id</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">banned_id</span><span class="p">[</span><span class="nx">banId</span><span class="p">]))</span> <span class="p">{</span>
                    <span class="nx">picked</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
                    <span class="nx">usedFlag</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
                    <span class="nx">find</span><span class="p">(</span><span class="nx">picked</span><span class="p">,</span> <span class="nx">banId</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
                    <span class="c1">//↓↓↓ for문이 돌기 때문에 안뽑은 것을 돌게한다. </span>
                    <span class="nx">picked</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span>
                    <span class="nx">usedFlag</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="nx">find</span><span class="p">(</span><span class="nx">picked</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="k">return</span> <span class="nx">banSets</span><span class="p">.</span><span class="nx">size</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">banCompare</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span> <span class="nx">ban</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">check</span> <span class="o">=</span> <span class="p">(</span><span class="nx">userId</span><span class="p">,</span> <span class="nx">banId</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">userId</span><span class="p">.</span><span class="nx">reduce</span><span class="p">((</span><span class="nx">check</span><span class="p">,</span> <span class="nx">cur</span><span class="p">,</span> <span class="nx">idx</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">cur</span> <span class="o">===</span> <span class="nx">banId</span><span class="p">[</span><span class="nx">idx</span><span class="p">])</span> <span class="p">{</span>
                <span class="nx">check</span> <span class="o">+=</span> <span class="nx">cur</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="nx">check</span> <span class="o">+=</span> <span class="dl">'</span><span class="s1">*</span><span class="dl">'</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">return</span> <span class="nx">check</span><span class="p">;</span>
        <span class="p">},</span> <span class="dl">''</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nx">check</span><span class="p">(</span><span class="nx">id</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">''</span><span class="p">),</span> <span class="nx">ban</span><span class="p">)</span> <span class="o">===</span> <span class="nx">ban</span><span class="p">;</span>
<span class="p">}</span>

</pre></td></tr></tbody></table></code></pre></div></div>
<h1 id="다른-풀이">다른 풀이</h1>
<p>위에선 중속적인 배열 생성 조건을 유지한 채 풀었다면, 
  배열을 만들어 준 뒤, 조합 문제를 해결하는 방법이다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
</pre></td><td class="rouge-code"><pre><span class="kd">var</span> <span class="nx">u_id</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">frodo</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">fradi</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">crodo</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">abc123</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">frodoc</span><span class="dl">"</span><span class="p">];</span>
<span class="c1">//var b_id = ["fr*d*", "abc1**"];</span>
<span class="kd">var</span> <span class="nx">b_id</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">*rodo</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">*rodo</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">******</span><span class="dl">"</span><span class="p">];</span>
<span class="c1">//var b_id = ["fr*d*", "*rodo", "******", "******"];</span>

<span class="kd">var</span> <span class="nx">test</span> <span class="o">=</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">u_id</span><span class="p">,</span> <span class="nx">b_id</span><span class="p">);</span>

<span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">user_id</span><span class="p">,</span> <span class="nx">banned_id</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">candidates</span> <span class="o">=</span> <span class="p">[];</span>
    <span class="kd">const</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">{};</span>
    <span class="nx">banned_id</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">ban</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">candidate</span> <span class="o">=</span> <span class="p">[];</span>
        <span class="nx">user_id</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">id</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">comp</span><span class="p">(</span><span class="nx">ban</span><span class="p">,</span> <span class="nx">id</span><span class="p">))</span> <span class="nx">candidate</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
        <span class="p">});</span>
        <span class="nx">candidates</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">candidate</span><span class="p">);</span>
    <span class="p">});</span>

    <span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">selected</span> <span class="o">=</span> <span class="p">[])</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">candidates</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="p">{</span>
            <span class="nx">selected</span><span class="p">.</span><span class="nx">sort</span><span class="p">();</span>
            <span class="nx">answer</span><span class="p">[</span><span class="nx">selected</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="dl">''</span><span class="p">)]</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nx">candidates</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">filter</span><span class="p">(</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="o">!</span><span class="nx">selected</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="nx">e</span><span class="p">)).</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="nx">f</span><span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">selected</span><span class="p">.</span><span class="nx">concat</span><span class="p">([</span><span class="nx">e</span><span class="p">]));</span>
        <span class="p">});</span>
    <span class="p">}</span>
    
    <span class="nx">f</span><span class="p">();</span>
    <span class="k">debugger</span><span class="p">;</span>
    <span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">answer</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">comp</span><span class="p">(</span><span class="nx">ban</span><span class="p">,</span> <span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">id</span><span class="p">.</span><span class="nx">length</span> <span class="o">!==</span> <span class="nx">ban</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">ban</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">ban</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">*</span><span class="dl">'</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">ban</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">!==</span> <span class="nx">id</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET