I"U<div class="card h-100 my-u-padding"><div class="insertcover"><a target="_blank" class="text-dark" href="https://programmers.co.kr/learn/courses/30/lessons/42583"><div class=""><img class="inserturl" src="/assets/images/study/programmers.png" alt="programmers.co.kr" /></div><div class="insert-img-body"><h4 class="insert-img-title">스택/큐 : 다리를 지나는 트럭</h4><p class="insert-img-description">programmers.co.kr</p></div></a></div></div>

<p>스택/큐로 구분지어져 있으나, 나는 이것을 배열로 풀었다.</p>

<p>큐를 사용했더라면 더욱 쉽게 풀었을 것이다.</p>

<p>문제 해결을 위해 고민했던 지점은 다음과 같다.</p>
<ol>
  <li>대기 트럭에서 다리를 건너는 트럭 배열로 옮길 때, 시간당 소요되는 다리 길이 처리 방법
    <ul>
      <li>Pair에 트력 무게와, 다리 길이를 함께 저장하고, 저장된 다리 길이는 타이밍마다 1씩 줄어들도록 했다.</li>
    </ul>
  </li>
  <li>대기 트럭 -&gt; 다리를 건너는 트럭, 다리를 건너는 트럭 -&gt; 다리를 지난 트럭 으로 옮길때. 순서대로 처리 하는 방법
    <ul>
      <li>순서를 맞추면서 Bound에서 벗어난 exception를 isNotEmpty로 막고자 하였다.</li>
    </ul>
  </li>
</ol>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="n">fun</span> <span class="nf">solution</span><span class="o">(</span><span class="nl">bridge_length:</span> <span class="nc">Int</span><span class="o">,</span> <span class="nl">weight:</span> <span class="nc">Int</span><span class="o">,</span> <span class="nl">truck_weights:</span> <span class="nc">IntArray</span><span class="o">):</span> <span class="nc">Int</span> <span class="o">{</span>
        <span class="kt">var</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="kt">var</span> <span class="n">waitingTruck</span> <span class="o">=</span> <span class="n">truck_weights</span><span class="o">.</span><span class="na">toMutableList</span><span class="o">()</span>
        <span class="kt">var</span> <span class="n">leftedTruck</span> <span class="o">=</span> <span class="n">arrayListOf</span><span class="o">&lt;</span><span class="nc">Int</span><span class="o">&gt;()</span>
        <span class="kt">var</span> <span class="n">movingTruck</span> <span class="o">:</span> <span class="nc">MutableList</span><span class="o">&lt;</span><span class="nc">Pair</span><span class="o">&lt;</span><span class="nc">Int</span><span class="o">,</span><span class="nc">Int</span><span class="o">&gt;&gt;</span> <span class="o">=</span> <span class="n">arrayListOf</span><span class="o">()</span>
        <span class="n">val</span> <span class="n">size</span> <span class="o">=</span> <span class="n">truck_weights</span><span class="o">.</span><span class="na">size</span>
        <span class="kt">var</span> <span class="n">currentWeight</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="kt">var</span> <span class="n">truckIndex</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="k">while</span><span class="o">(</span><span class="n">leftedTruck</span><span class="o">.</span><span class="na">size</span> <span class="o">&lt;</span> <span class="n">size</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">movingTruck</span> <span class="o">=</span> <span class="n">movingTruck</span><span class="o">.</span><span class="na">map</span> <span class="o">{</span> <span class="nc">Pair</span><span class="o">(</span><span class="n">it</span><span class="o">.</span><span class="na">first</span><span class="o">,</span> <span class="n">it</span><span class="o">.</span><span class="na">second</span><span class="o">-</span><span class="mi">1</span><span class="o">)}.</span><span class="na">toMutableList</span><span class="o">()</span>
            <span class="k">if</span><span class="o">(</span><span class="n">movingTruck</span><span class="o">.</span><span class="na">isNotEmpty</span><span class="o">())</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">movingTruck</span><span class="o">.</span><span class="na">first</span><span class="o">().</span><span class="na">second</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">leftedTruck</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">movingTruck</span><span class="o">.</span><span class="na">first</span><span class="o">().</span><span class="na">first</span><span class="o">)</span>
                    <span class="n">movingTruck</span> <span class="o">=</span> <span class="n">movingTruck</span><span class="o">.</span><span class="na">drop</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="na">toMutableList</span><span class="o">()</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(</span><span class="n">waitingTruck</span><span class="o">.</span><span class="na">isNotEmpty</span><span class="o">())</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">movingTruck</span><span class="o">.</span><span class="na">sumBy</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">first</span> <span class="o">}</span> <span class="o">+</span> <span class="n">waitingTruck</span><span class="o">.</span><span class="na">first</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">weight</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">movingTruck</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">Pair</span><span class="o">(</span><span class="n">truck_weights</span><span class="o">[</span><span class="n">truckIndex</span><span class="o">++],</span> <span class="n">bridge_length</span><span class="o">))</span>
                    <span class="n">waitingTruck</span> <span class="o">=</span> <span class="n">waitingTruck</span><span class="o">.</span><span class="na">drop</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="na">toMutableList</span><span class="o">()</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="n">answer</span><span class="o">++</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="더-나은-풀이">더 나은 풀이</h3>

<p>이 문제를 해결하기 위한 조건 중 가장 큰 부분은 다리를 건너는 동안 경과 시간이 지나야 하는 것이다.
또한 다리를 건너는 동작과 다리를 지나는 동작은</p>
:ET